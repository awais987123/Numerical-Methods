[{"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\index.js":"1","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\App.js":"2","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Bisection.js":"4","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Newton-raphson.js":"5","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Interpolation\\Newton.js":"6","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Secant.js":"7","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Backwardh.js":"8","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Interpolation\\Lagrange.js":"9","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Integration\\CompositeTrapzoidal.js":"10","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Forwardh.js":"11","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Centralh.js":"12","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Integration\\CompositeSimpson.js":"13","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\ODE\\Euler.js":"14","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\services\\Services.js":"15","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\components\\inputStyle.js":"16","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\components\\Graph.js":"17"},{"size":379,"mtime":1652560102982,"results":"18","hashOfConfig":"19"},{"size":5542,"mtime":1652757843107,"results":"20","hashOfConfig":"19"},{"size":5065,"mtime":1639915791000,"results":"21","hashOfConfig":"19"},{"size":6500,"mtime":1652755536267,"results":"22","hashOfConfig":"19"},{"size":4450,"mtime":1652755783598,"results":"23","hashOfConfig":"19"},{"size":8245,"mtime":1652755985143,"results":"24","hashOfConfig":"19"},{"size":4610,"mtime":1652755817718,"results":"25","hashOfConfig":"19"},{"size":4193,"mtime":1652756116247,"results":"26","hashOfConfig":"19"},{"size":7614,"mtime":1652755905179,"results":"27","hashOfConfig":"19"},{"size":4004,"mtime":1652755373066,"results":"28","hashOfConfig":"19"},{"size":4218,"mtime":1652756158347,"results":"29","hashOfConfig":"19"},{"size":4250,"mtime":1652756141956,"results":"30","hashOfConfig":"19"},{"size":4109,"mtime":1652756023244,"results":"31","hashOfConfig":"19"},{"size":4628,"mtime":1652755863982,"results":"32","hashOfConfig":"19"},{"size":1174,"mtime":1651135807000,"results":"33","hashOfConfig":"19"},{"size":320,"mtime":1652755244891,"results":"34","hashOfConfig":"19"},{"size":738,"mtime":1651135807000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xlsmkj",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\index.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\App.js",["74","75","76","77","78","79","80","81","82"],"import React, {useState,useEffect, Component } from 'react'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport {Dropdown,Button, Layout, Menu } from 'antd';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './screen.css';\nimport './App.css';\nimport { BookFilled,HighlightOutlined ,PieChartOutlined,StockOutlined } from '@ant-design/icons';\n\nimport Bisection from './Calculate/Root of Equation/Bisection';\nimport Newton from './Calculate/Root of Equation/Newton-raphson';\nimport Secant from './Calculate/Root of Equation/Secant';\nimport NewtonInterpolate from './Calculate/Interpolation/Newton';\nimport Lagrange from './Calculate/Interpolation/Lagrange';\nimport CompositeTrapezoidal from './Calculate/Integration/CompositeTrapzoidal';\nimport CompositeSimpson from './Calculate/Integration/CompositeSimpson';\nimport ForwardH from './Calculate/Differentiation/Forwardh';\nimport BackwardH from './Calculate/Differentiation/Backwardh';\nimport CentralH from './Calculate/Differentiation/Centralh';\nimport Euler from './Calculate/ODE/Euler';\n\n\nconst { SubMenu } = Menu;\nconst { Header, Content,Footer, Sider } = Layout;\n\nclass App extends Component {\n  state = {\n    loading: false };\n\n    fakeRequest = () => {\n      return new Promise(resolve => setTimeout(() => resolve(), 100));\n    };\n  componentDidMount() {\n    this.fakeRequest().then(() => {\n      const el = document.querySelector(\".loader-container\");\n      if (el) {\n        el.remove();   }\n    });\n  }\n\n\n  render() {\n    if (this.state.loading) {      return null; }\n    \n    return (\n      \n      <Router>\n        <Layout>\n          <Header className=\"header\" style={{backgroundColor:\"#322e2f\", color:\"#e89a3c\" ,height: \"60px\" }}>\n           \n          <div  className='primary'>\n              <h1  style={{ color:\"#FFFFFF\",fontSize:\"40px\",marginTop:'auto',fontFamily:'ui-serif', marginRight:\"10px\",paddingTop:'5px'}} >Numericals All-in-One</h1>\n              \n            </div>\n          </Header>\n          <Layout>\n              <Menu\n                mode=\"horizontal\"\n                style={{ display:'flex',flexDirection:'row',justifyContent:'center', paddingTop:\"10px\", borderRight: 0, backgroundColor: \" #e2d810   \", cursor: 'move'}}\n                theme=\"light\"\n              >\n                <SubMenu key=\"root_submenu\" title={<span>Non-Linear Equations</span>}>\n                  <Menu.Item key=\"menu_bisection\" ><Link to=\"/bisection\">Bisection</Link></Menu.Item>\n                  <Menu.Item key=\"menu_newton\"><Link to=\"/newton-raphson\">Newton-Raphson</Link></Menu.Item>\n                  <Menu.Item key=\"menu_secant\"><Link to=\"/secant\">Secant Method</Link></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"interpolate_submenu\" title={<span>Interpolation</span>}>\n                  <Menu.Item key=\"menu_divide\"><Link to=\"/newton\">Newton Divide Difference</Link></Menu.Item>\n                  <Menu.Item key=\"menu_lagrange\"><Link to=\"/lagrange\">Lagrange</Link></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"integrate_submenu\" title={<span>Integration</span>}>\n                  <Menu.Item key=\"menu_compositeTrapzoidal\"><Link to=\"/trapezoidal\">Composite Trapezoidal Rule</Link></Menu.Item>\n                  <Menu.Item key=\"menu_compositeSimpson\"><Link to=\"/simpson\">Composite Simpson's Rule</Link></Menu.Item>\n                </SubMenu>\n                <SubMenu key=\"diff_submenu\" title={<span>Differentiation</span>}>\n                  <Menu.Item key=\"menu_forwardh\"><Link to=\"/forwardh\">Forward Divided-Differences O(h)</Link></Menu.Item>\n                  <Menu.Item key=\"menu_backwardh\"><Link to=\"/backwardh\">Backward Divided-Differences O(h)</Link></Menu.Item>\n                  <Menu.Item key=\"menu_centralh\"><Link to=\"/centralh\">Central Divided-Differences O(h{<sup>2</sup>})</Link></Menu.Item>\n                </SubMenu>\n                 <SubMenu key=\"de_submenu\" title={<span>Ordinary Differential Equation</span>}>\n                  <Menu.Item key=\"menu_euler\"><Link to=\"/euler\">Euler's Method</Link></Menu.Item>\n                </SubMenu> \n              </Menu>\n\n            <Layout style={{ padding: '0 25px 25px' }}>\n              <Content style={{ padding: 150, margin: 0, minHeight: 280, }}>\n                <Switch>\n                  {/* Root of Equation */}\n                  <Route exact path=\"/bisection\" component={Bisection} />\n                  <Route exact path=\"/newton-raphson\" component={Newton} />\n                  <Route exact path=\"/secant\" component={Secant} />\n                  {/* Interpolation */}\n                  <Route exact path=\"/newton\" component={NewtonInterpolate} />\n                  <Route exact path=\"/lagrange\" component={Lagrange} />\n                  {/* Integration */}\n                  <Route exact path=\"/trapezoidal\" component={CompositeTrapezoidal} />\n                  <Route exact path=\"/simpson\" component={CompositeSimpson} />\n                  {/* Differentiation */}\n                  <Route exact path=\"/forwardh\" component={ForwardH} />\n                  <Route exact path=\"/backwardh\" component={BackwardH} />\n                  <Route exact path=\"/centralh\" component={CentralH} />\n                  {/* Ordinary Differential Equation (ODE) */}\n                  <Route exact path=\"/euler\" component={Euler} />\n                </Switch>\n              </Content>\n            </Layout>\n          </Layout>\n          <Footer>\n          \n          </Footer>\n        </Layout>\n      </Router>\n    )\n  }\n}\nexport default App;\n","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Bisection.js",["83","84","85","86","87"],"import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func, getXL_XR_from_API } from '../../services/Services';\nimport Graph from '../../components/Graph';\nimport {InputStyle,colorBg} from '../../components/inputStyle';\nimport { MathJax, MathJaxContext } from \"better-react-mathjax\";\nimport Tex2SVG from \"react-hook-mathjax\";\nimport '../../App.css';\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"a\",\n        dataIndex: \"xl\",\n        key: \"xl\"\n    },\n    {\n        title: \"b\",\n        dataIndex: \"xr\",\n        key: \"xr\"\n    },\n    {\n        title: \"x\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Bisection extends Component {\n\n    constructor() {\n        super();\n        this.state = this.getInitialState();\n        this.handleChange = this.handleChange.bind(this);\n        this.bisection = this.bisection.bind(this);\n        this.handleAPI = this.handleAPI.bind(this);\n    }\n\n    getInitialState = () => ({\n        fx: \"\",\n        xl: 0,\n        xr: 0,\n        showOutputCard: false,\n        showGraph: false,\n        moveLeft: false\n        \n    })\n\n    bisection(xl, xr) {\n        var increaseFunction = false;\n        var xm = 0;\n        var sum = parseFloat(0.000000);\n        var n = 0;\n        var data = []\n        data['xl'] = []\n        data['xr'] = []\n        data['x'] = []\n        data['error'] = []\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\n            increaseFunction = true;\n        }\n\n        do {\n            xm = (xl + xr) / 2;\n            if (func(this.state.fx, xm) * func(this.state.fx, xr) < 0) {\n                sum = error(xm, xr);\n                if (increaseFunction) {\n                    xl = xm;\n                }\n                else {\n                    xr = xm;\n                }\n\n            }\n            else {\n                sum = error(xm, xl);\n                if (increaseFunction) {\n                    xr = xm;\n                }\n                else {\n                    xl = xm;\n                }\n            }\n            data['xl'][n] = xl;\n            data['xr'][n] = xr;\n            data['x'][n] = xm.toFixed(8);\n            data['error'][n] = Math.abs(sum).toFixed(8);\n            n++;\n        } while (Math.abs(sum) > 0.000001);\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true,\n\n        })\n\n\n    }\n\n    async handleAPI() {\n    \n        const response = await getXL_XR_from_API();\n        this.setState({\n            fx: response[0].fx,\n            xl: response[0].xl,\n            xr: response[0].xr\n        })\n        const { fx, xl, xr } = this.state;\n\n        this.bisection(parseFloat(xl), parseFloat(xr));\n\n    }\n\n    createTable(xl, xr, x, error) {\n        dataInTable = []\n        for (var i = 0; i < xl.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                xl: xl[i],\n                xr: xr[i],\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n\n    }\n    render() {\n        let { fx, xl, xr } = this.state;\n        return (\n            <div style={{ background: \" #6b7b8c \", padding: \"30px\", borderRadius:'2%' }} className='card'>\n                <h3 style={{ color: \"black\", fontWeight: \"bold\",fontFamily:'ui-serif' }}>Bisection Method</h3>\n                <h5 style={{fontFamily:'ui-serif'}}>In mathematics, the bisection method is a root-finding method that applies to any continuous function for which one knows two values with opposite signs.</h5>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{  colorBg, borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                            id=\"inputCard\"\n                        >\n                            <h2 style={{color:\"black\", borderRadius:'80%'}}>Enter the Function f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2 style={{color:\"black\"}}>a</h2><Input size=\"large\" name=\"xl\" style={InputStyle}></Input>\n                            <h2 style={{color:\"black\"}}>b</h2><Input size=\"large\" name=\"xr\" style={InputStyle}></Input><br /><br />\n                            <div className=\"row\">\n                                <div className=\"col-3\">\n                                    <Button id=\"submit_button\" onClick={\n                                    () => this.bisection(parseFloat(xl), parseFloat(xr))\n                                }\n                                    style={{ background: \"#786ba2 \", color: 'white',\n                                    fontSize: '16px',\n                                    border: 'none',\n                                    cursor: 'pointer',\n                                \n                                    borderRadius: '5px',\n                                    textAlign: 'center'}}>Submit</Button>\n                                </div>\n                            </div>\n\n\n\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Result\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#e89a3c \", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                        <h3><i>Solution of </i></h3><Tex2SVG display=\"inline\" latex={this.state.fx} />\n                        \n                        \n                    \n                        <Table pagination={{defaultPageSize: 8}} columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\n                        </Card>\n                    }\n                </div>\n            </div>\n\n        );\n    }\n}\nexport default Bisection;","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Newton-raphson.js",["88","89"],"import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func, funcDiff } from '../../services/Services';\nimport Graph from '../../components/Graph';\nimport {InputStyle,colorBg} from '../../components/inputStyle';\n\nimport Tex2SVG from \"react-hook-mathjax\";\nvar dataInTable;\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Newton extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newton_raphson = this.newton_raphson.bind(this);\n    }\n\n    newton_raphson(xold) {\n        var xnew = 0;\n        var epsilon = parseFloat(0.000000);\n        var n = 0;\n        var data = []\n        data['x'] = []\n        data['error'] = []\n        do {\n            xnew = xold - (func(this.state.fx, xold) / funcDiff(xold));\n            epsilon = error(xnew, xold)\n            data['x'][n] = xnew.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n            n++;\n            xold = xnew;\n        } while (Math.abs(epsilon) > 0.000001);\n\n        this.createTable(data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n    createTable(x, error) {\n        dataInTable = []\n        for (var i = 0; i < x.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        let { fx, x0 } = this.state;\n        return (\n            <div style={{ background: \" #6b7b8c \", padding: \"30px\", borderRadius:'2%' }}>\n                <h3 style={{ fontFamily:'ui-serif',color: \"black\", fontWeight: \"bold\" }}>Newton Raphson Method</h3>\n                <h5 style={\n                    {fontFamily:'ui-serif'}\n                }>The Newton-Raphson method (also known as Newton's method) is a way to quickly find a good approximation for the root of a real-valued function f ( x ) = 0 f(x) = 0 f(x)=0. It uses the idea that a continuous and differentiable function can be approximated by a straight line tangent to it.</h5>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ colorBg, borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>Enter the Function f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>Initial Guss - x<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <Button id=\"submit_button\" onClick={\n                                () => this.newton_raphson(parseFloat(x0))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                     </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#e89a3c\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                        <h3><i>Solution of </i></h3><Tex2SVG display=\"inline\" latex={this.state.fx} />\n                        \n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        </Card>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default Newton;","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Interpolation\\Newton.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Root of Equation\\Secant.js",["90","91"],"import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error, func } from '../../services/Services';\nimport Graph from '../../components/Graph';\nimport {InputStyle,colorBg} from '../../components/inputStyle';\n\nimport Tex2SVG from \"react-hook-mathjax\";\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Secant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            x1: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.secant = this.secant.bind(this);\n    }\n\n    secant(x0, x1) {\n        var x = [], y = 0, epsilon = parseFloat(0.000000);\n        var n = 1, i = 1;\n        var data = []\n        data['y'] = []\n        data['error'] = []\n        x.push(x0);\n        x.push(x1);\n        data['y'][0] = x0;\n        data['error'][0] = \"---\";\n\n        do {\n            y = x[i] - (func(this.state.fx, x[i]) * ((x[i] - x[i - 1]))) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n            x.push(y);\n            epsilon = error(y, x[i]);\n            data['y'][n] = y.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n\n            n++;\n            i++;\n\n        } while (Math.abs(epsilon) > 0.000001);\n        this.createTable(data['y'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(y, error) {\n        dataInTable = []\n        for (var i = 0; i < y.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                y: y[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        let { fx, x0, x1 } = this.state;\n        return (\n            <div style={{ background: \" #6b7b8c \", padding: \"30px\", borderRadius:'2%' }}>\n                <h3 style={{ fontFamily:'ui-serif',color: \"black\", fontWeight: \"bold\" }}>Secant Method</h3>\n               <h5>In numerical analysis, the secant method is a root-finding algorithm that uses a succession of roots of secant lines to better approximate a root of a function f. The secant method can be thought of as a finite-difference approximation of Newton's method.</h5>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ colorBg, borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>Enter the Function f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>x<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <h2>x<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={InputStyle}></Input><br /><br />\n                            <Button id=\"submit_button\" onClick={\n                                () => this.secant(parseFloat(x0), parseFloat(x1))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ width: \"100%\", background: \"#e89a3c\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                        >\n                        <h3><i>Solution of </i></h3><Tex2SVG display=\"inline\" latex={this.state.fx} />\n                        \n                            <Table columns={columns} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        </Card>\n                    }\n                </div>\n\n            </div>\n\n        );\n    }\n}\nexport default Secant;\n\n\n\n\n","C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Backwardh.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Interpolation\\Lagrange.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Integration\\CompositeTrapzoidal.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Forwardh.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Differentiation\\Centralh.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\Integration\\CompositeSimpson.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\Calculate\\ODE\\Euler.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\services\\Services.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\components\\inputStyle.js",[],"C:\\Users\\E560\\Desktop\\cheeck\\NM\\Numerical_Methods\\src\\components\\Graph.js",[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"96","line":1,"column":25,"nodeType":"94","messageId":"95","endLine":1,"endColumn":34},{"ruleId":"92","severity":1,"message":"97","line":3,"column":9,"nodeType":"94","messageId":"95","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"98","line":3,"column":18,"nodeType":"94","messageId":"95","endLine":3,"endColumn":24},{"ruleId":"92","severity":1,"message":"99","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":20},{"ruleId":"92","severity":1,"message":"100","line":7,"column":21,"nodeType":"94","messageId":"95","endLine":7,"endColumn":38},{"ruleId":"92","severity":1,"message":"101","line":7,"column":40,"nodeType":"94","messageId":"95","endLine":7,"endColumn":56},{"ruleId":"92","severity":1,"message":"102","line":7,"column":57,"nodeType":"94","messageId":"95","endLine":7,"endColumn":70},{"ruleId":"92","severity":1,"message":"103","line":23,"column":33,"nodeType":"94","messageId":"95","endLine":23,"endColumn":38},{"ruleId":"92","severity":1,"message":"104","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"105","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"92","severity":1,"message":"106","line":8,"column":19,"nodeType":"94","messageId":"95","endLine":8,"endColumn":33},{"ruleId":"92","severity":1,"message":"107","line":119,"column":17,"nodeType":"94","messageId":"95","endLine":119,"endColumn":19},{"ruleId":"92","severity":1,"message":"107","line":145,"column":15,"nodeType":"94","messageId":"95","endLine":145,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"107","line":84,"column":15,"nodeType":"94","messageId":"95","endLine":84,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"107","line":92,"column":15,"nodeType":"94","messageId":"95","endLine":92,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","'BookFilled' is defined but never used.","'HighlightOutlined' is defined but never used.","'PieChartOutlined' is defined but never used.","'StockOutlined' is defined but never used.","'Sider' is assigned a value but never used.","'Graph' is defined but never used.","'MathJax' is defined but never used.","'MathJaxContext' is defined but never used.","'fx' is assigned a value but never used."]